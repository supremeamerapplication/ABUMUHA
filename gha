Got it — here’s a clear, ready-to-use prompt you can give me (or another AI) to generate the fantasy league / tournament app using Appwrite Users + Database + Storage.


---

🏗 Prompt for Building Fantasy League/Tournament App

> Prompt:

Build me a fantasy league and tournament web app where:

Core Features:

Users can sign up / log in using Appwrite authentication (email + Google).

After login, they can view active tournaments (list fetched from Appwrite Database).

Each tournament has:

Entry fee (in BNB or points)

Prize pool (calculated from number of players)

Start time / End time

Status: Upcoming | Active | Completed


Users can join a tournament by paying the entry fee. Their participation is stored in Appwrite Database.

Users select players/teams for that tournament from a given list (stored in Appwrite Database/Storage).

After the real-world match (or simulated match) ends, the system calculates points for each user and updates their score in Appwrite Database.

A Leaderboard page shows top users by points (real-time if possible).

Automatic prize distribution:

Once the tournament ends, winners (top N users) are credited with prize tokens (in-app points or on-chain BNB payout).

Deduct 10% as platform fee and store it in admin wallet or Appwrite collection.


Users can view past tournaments, their rank, and earnings history.


Technical Requirements:

Frontend: HTML + TailwindCSS + JavaScript (or React for better UI).

Backend: Use Appwrite Users for authentication, Appwrite Database for tournaments, users, and leaderboard data, and Appwrite Storage for storing player images and assets.

Database Collections:

users → userID, email, walletAddress, balance

tournaments → title, description, entryFee, prizePool, startTime, endTime, status

participants → tournamentID, userID, teamSelection, score, isWinner

transactions → userID, type (entryFee, prize, platformFee), amount

players → name, team, stats, imageURL


Payment Integration: Add Web3 (BNB) payment option for entry fees and prize distribution.

Admin Dashboard:

Create / edit tournaments

Upload player data (name, stats, images)

Trigger prize distribution manually if needed



Design:

Clean dashboard-style UI.

Tournament cards with countdown timer, prize pool, join button.

Live leaderboard with player avatars and points.

User profile page with balance, transaction history, past tournament results.


Bonus:

Add real-time updates with Appwrite Realtime API (leaderboard auto-updates).

Allow private tournaments (users can invite friends via unique link).





---

This prompt will make the AI (or developer) build you exactly what you need — a fantasy league with Appwrite authentication, database, storage, leaderboard, and automatic payouts.


---

Would you like me to go a step further and generate a sample Appwrite Database schema (JSON) + front-end flowchart so your developer (or I) can implement this faster? This will save you a lot of setup time.

